javascript:(function(){try{console.log('Starting Slack channel extraction...');const channels=new Map();function getWorkspaceId(){const urlMatch=window.location.href.match(/\/client\/(T[A-Z0-9]+)/);if(urlMatch)return urlMatch[1];if(window.boot_data&&window.boot_data.team_id)return window.boot_data.team_id;const lsKeys=Object.keys(localStorage);for(const key of lsKeys){if(key.includes('team_id')){const match=key.match(/T[A-Z0-9]+/);if(match)return match[0];}}return'UNKNOWN';}const teamId=getWorkspaceId();console.log('Workspace ID: '+teamId);const selectors=['[data-qa^="channel_sidebar_name"]','[class*="channel_sidebar_name"]','[data-qa-channel-sidebar-channel-type]','[class*="p-channel_sidebar__name"]'];for(const selector of selectors){const elements=document.querySelectorAll(selector);if(elements.length>0){console.log('Found '+elements.length+' channels');elements.forEach(el=>{const parent=el.closest('[data-qa-channel-sidebar-channel-type]')||el.closest('[class*="channel_item"]');if(!parent)return;let channelId=null;const link=parent.querySelector('a[href*="/archives/"]');if(link){const match=link.href.match(/\/archives\/([A-Z0-9]+)/);if(match)channelId=match[1];}if(!channelId){channelId=parent.getAttribute('data-qa-channel-sidebar-channel-id')||parent.getAttribute('data-channel-id');}if(!channelId)return;const name=el.textContent.trim().replace(/^[#@]/,'');const type=parent.getAttribute('data-qa-channel-sidebar-channel-type')||'channel';let channelType='channel';if(type.includes('im')||type.includes('direct')){channelType='im';}else if(type.includes('mpim')||type.includes('group_dm')){channelType='mpim';}else if(type.includes('private')){channelType='group';}channels.set(channelId,{id:channelId,name:name,displayName:el.textContent.trim(),teamId:teamId,type:channelType});});break;}}const channelArray=Array.from(channels.values()).sort((a,b)=>{const typeOrder={channel:0,group:1,im:2,mpim:3};if(typeOrder[a.type]!==typeOrder[b.type]){return typeOrder[a.type]-typeOrder[b.type];}return a.name.localeCompare(b.name);});console.log('Extracted '+channelArray.length+' channels');const output={version:1,lastUpdated:new Date().toISOString(),channels:channelArray};const jsonStr=JSON.stringify(output,null,2);const textarea=document.createElement('textarea');textarea.value=jsonStr;textarea.style.position='fixed';textarea.style.opacity='0';document.body.appendChild(textarea);textarea.select();document.execCommand('copy');document.body.removeChild(textarea);alert('Successfully extracted '+channelArray.length+' channels!\n\nThe data has been copied to your clipboard.\nPaste it into the Raycast extension to update your channel list.');}catch(e){console.error('Error:',e);alert('Error extracting channels: '+e.message);}})();